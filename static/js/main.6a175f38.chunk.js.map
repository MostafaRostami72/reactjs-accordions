{"version":3,"sources":["../../src/components/helper.js","../../src/components/accordion.js","../../src/index.js","props.js","items_props.js","App.js","index.js"],"names":["isEmpty","value","collapseTimeOut","Accordion","itemKey","content","React","className","key","onClick","e","id","target","accordion","closest","current","allCollapseToggles","querySelectorAll","allCollapses","currentCollapse","querySelector","length","classList","remove","collapseTag","style","height","setTimeout","contains","clearTimeout","element","add","scrollHeight","role","title","xmlns","viewBox","data-name","points","fill","stroke","stroke-linejoin","stroke-width","dangerouslySetInnerHTML","__html","items","map","item","caption","Props","ItemsProps","App","Section","Pre","styled","div","pre","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a175f38.chunk.js","sourcesContent":["export const isEmpty = (value) => {\n  return (typeof value === \"undefined\" || value === '' || value === null);\n};\n","import React from 'react';\nimport {isEmpty} from './helper'\n\nlet collapseTimeOut = undefined;\nconst Accordion = ({itemKey, title, content}) => {\n\n    const getElementHeight = (element) => {\n        let height = 0;\n\n        element.classList.add('show');\n        height = element.scrollHeight;\n        element.classList.remove('show');\n\n        return height;\n    };\n\n    const handleShowCollapse = (e, id) => {\n        if (!isEmpty(e.target)) {\n            const accordion = e.target.closest('.rs-accordion');\n            const current = '.c-' + id;\n            const allCollapseToggles = accordion.querySelectorAll('.rs-accordion-header');\n            const allCollapses = accordion.querySelectorAll('.rs-accordion-body:not(' + current + ')');\n            const currentCollapse = accordion.querySelector(current);\n\n            if (allCollapseToggles.length) {\n                for (let toggle of allCollapseToggles) {\n                    toggle.classList.remove('collapsed');\n                }\n            }\n\n            if (allCollapses.length) {\n                for (let collapseTag of allCollapses) {\n                    collapseTag.style.height = 0;\n\n                    setTimeout(() => {\n                        collapseTag.classList.remove('show')\n                    }, 500)\n                }\n            }\n\n            if (!isEmpty(currentCollapse)) {\n                if (currentCollapse.classList.contains('show')) {\n                    currentCollapse.style.height = 0;\n\n                    if (!isEmpty(collapseTimeOut)) {\n                        clearTimeout(collapseTimeOut);\n                    }\n\n                    collapseTimeOut = setTimeout(() => {\n                        currentCollapse.classList.remove('show')\n                    }, 500)\n                } else {\n                    currentCollapse.style.height = getElementHeight(currentCollapse) + 'px';\n\n                    currentCollapse.classList.add('show');\n                    e.target.classList.add('collapsed');\n                }\n            }\n        }\n    };\n\n    return (\n        <div className=\"rs-accordion-card\" key={itemKey}>\n            <div className=\"rs-accordion-header\" onClick={(e) => handleShowCollapse(e, itemKey)} role=\"button\">\n                {title}\n\n                <span className=\"rs-accordion-header-icon\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 11.82 6.64\"><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_2-2\" data-name=\"Layer 2\"><polyline points=\"11.29 0.53 5.91 5.89 0.53 0.53\" fill=\"none\" stroke=\"#222\" stroke-linejoin=\"round\" stroke-width=\"1.5\"/></g></g></svg>\n                </span>\n            </div>\n\n            <div className={\"rs-accordion-body \" + ('c-' + itemKey)}>\n                <div className=\"rs-accordion-content\" dangerouslySetInnerHTML={{__html: content}}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Accordion;\n","import React from 'react'\nimport Accordion from \"./components/accordion\";\nimport './styles.scss'\n\nconst ReactAccordion = ({items = [], className}) => {\n    return (\n        <div className={\"rs-accordion \" + (className ?? '')}>\n            {\n                items.map((item, key) =>\n                    <Accordion\n                        itemKey={key}\n                        title={item.title}\n                        content={item.caption}\n                    />\n                )\n            }\n        </div>\n    )\n};\n\nexport default ReactAccordion;\n","import React from 'react';\n\nexport default function Props() {\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-striped \">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Default</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>items</td>\n                    <td>required</td>\n                    <td>Array</td>\n                    <td>set items for accordion</td>\n                </tr>\n\n                <tr>\n                    <td>className</td>\n                    <td>nullable</td>\n                    <td>String</td>\n                    <td>set className for accordion main div.</td>\n                </tr>\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function ItemsProps() {\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-striped \">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Default</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>title</td>\n                    <td>required</td>\n                    <td>String</td>\n                    <td>set title for accordion header</td>\n                </tr>\n\n                <tr>\n                    <td>caption</td>\n                    <td>required</td>\n                    <td>String or HTML Tags</td>\n                    <td>\n                        set caption for accordion content. <br/>\n                        You can use HTML Tags Elements in caption like p,a,span,...\n                    </td>\n                </tr>\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport Accordions from 'reactjs-accordions'\nimport 'reactjs-accordions/dist/index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Props from \"./props\";\nimport ItemsProps from \"./items_props\";\n\nconst App = () => {\n    const items = [\n        {title: 'Accordion title 1', caption: 'In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available. In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available. In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available.'},\n        {title: 'Accordion title 2', caption: 'In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available.'},\n        {title: 'Accordion title 3', caption: 'In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available.'},\n        {title: 'Accordion title 4', caption: 'In publishing and graphic design, Lorem ipsum is a placeholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available.'},\n    ];\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-12 col-lg-6\">\n                    <h1 style={{'fontSize': '32px'}}>React simple accordion</h1>\n                    <p className=\"mt-5\">✔️ A useful and simple package to create an react accordion.</p>\n\n                    <Section>\n                        <h2>Install</h2>\n                        <hr/>\n                        <Pre>\n                            <code>\n                                npm install --save reactjs-accordions\n                            </code>\n                        </Pre>\n                    </Section>\n                </div>\n\n                <div className=\"col-12 col-lg-6\">\n                    <div className=\"border px-3 rounded-lg\">\n                        <Accordions\n                            items={items}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"mt-4\">\n                <Section>\n                    <h2>Usage</h2>\n                    <hr/>\n\n                    <div className=\"mt-3\">\n                        <h4 className=\"mb-3\">1 - Import component</h4>\n                        <Pre>\n                            <code className=\"d-block\">\n                                import Accordions from 'reactjs-accordions';\n                            </code>\n                            <code className=\"d-block\">\n                                import 'reactjs-accordions/dist/index.css';\n                            </code>\n                        </Pre>\n                    </div>\n\n                    <div className=\"mt-5\">\n                        <h4 className=\"mb-3\">2 - Add the component markup to your react component</h4>\n                        <Pre>\n                            <code>\n                                {\n                                    'import React from \\'react\\';\\n' +\n                                    'import Accordions from \\'reactjs-accordions\\';\\n' +\n                                    '\\n' +\n                                    '\\n' +\n                                    'const Example = () => {\\n\\n'+\n                                    'const items = [\\n' +\n                                    '    {title: \\'Accordion title 1\\', caption: \\'Accordion content 1\\'},\\n' +\n                                    '    {title: \\'Accordion title 2\\', caption: \\'Accordion content 2\\'},\\n' +\n                                    '    {title: \\'Accordion title 3\\', caption: \\'Accordion content 3\\'},\\n' +\n                                    '    {title: \\'Accordion title 4\\', caption: \\'Accordion content 4\\'},\\n' +\n                                    '];\\n' +\n                                    '\\n'+\n                                    '    \\n' +\n                                    '    return (\\n' +\n                                    '        <div className=\"border px-3 rounded-lg\">\\n' +\n                                    '         <Accordions\\n' +\n                                    '             items={items}\\n' +\n                                    '             className=\"\"\\n' +\n                                    '         />\\n' +\n                                    '        </div>\\n' +\n                                    '    );\\n' +\n                                    '};\\n' +\n                                    '\\n' +\n                                    'export default Example;\\n'\n                                }\n                            </code>\n                        </Pre>\n                    </div>\n                </Section>\n\n                <Section>\n                    <h2>Props</h2>\n\n                    <div className=\"mt-3\">\n                        <Props/>\n                    </div>\n                </Section>\n\n                <Section>\n                    <h2>Accordion items and params</h2>\n\n                    <div className=\"mt-3\">\n                        <ItemsProps/>\n\n                        <Pre>\n                            <code>\n                                {\n`\nconst items = [\n    {title: 'Accordion title 1', caption: 'Accordion content 1'},\n    {title: 'Accordion title 2', caption: 'Accordion content 2'},\n    {title: 'Accordion title 3', caption: 'Accordion content 3'},\n    {title: 'Accordion title 4', caption: 'Accordion content 4'},\n];\n`\n                                }\n                            </code>\n                        </Pre>\n                    </div>\n                </Section>\n            </div>\n        </div>\n    )\n};\n\nexport default App\n\n// styles\n\nconst Section = styled.div`\n    margin: 80px 0;\n\n    @media (max-width: 768px) {\n        margin: 56px 0;\n    }\n`;\n\nexport const Pre = styled.pre`\n    background-color: #ebebeb;\n    font-size: .937rem;\n    padding: 12px;\n    border-radius: 8px;\n`;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}